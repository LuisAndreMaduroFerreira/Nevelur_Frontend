{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js\";\nimport React, { Component } from 'react';\nimport './content_pane_container.css';\nimport ListView from '../cardview/cardview_component';\nimport CardView from '../listview/listview_component';\nimport * as THREE from \"three\";\n\nfunction RenderedView(props) {\n  if (props.listView == true) {\n    return /*#__PURE__*/React.createElement(CardView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(ListView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nclass ContentPaneContainer extends Component {\n  componentDidMount() {\n    let scene, camera, renderer;\n\n    var init = function () {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 1;\n      camera.rotation.x = 1.16;\n      camera.rotation.y = -0.12;\n      camera.rotation.z = 0.27;\n      let ambient = new THREE.AmbientLight(0x555555);\n      scene.add(ambient);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n      renderer.setClearColor(scene.fog.color);\n      document.body.appendChild(renderer.domElement);\n      render();\n    };\n\n    var render = function () {\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n    init();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-pane-container\",\n      ref: mount => {\n        this.mount = mount;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ContentPaneContainer;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js"],"names":["React","Component","ListView","CardView","THREE","RenderedView","props","listView","ContentPaneContainer","componentDidMount","scene","camera","renderer","init","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","rotation","x","y","ambient","AmbientLight","add","WebGLRenderer","setSize","fog","FogExp2","setClearColor","color","document","body","appendChild","domElement","render","requestAnimationFrame","mount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,MAAGA,KAAK,CAACC,QAAN,IAAkB,IAArB,EAA0B;AACtB,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGI;AACA,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ;;AAED,MAAMC,oBAAN,SAAmCP,SAAnC,CAA4C;AAExCQ,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAJ,EAAWC,MAAX,EAAmBC,QAAnB;;AACA,QAAIC,IAAI,GAAG,YAAY;AACrBH,MAAAA,KAAK,GAAG,IAAIN,KAAK,CAACU,KAAV,EAAR;AACAH,MAAAA,MAAM,GAAG,IAAIP,KAAK,CAACW,iBAAV,CAA4B,EAA5B,EAA+BC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA1D,EAAsE,CAAtE,EAAwE,IAAxE,CAAT;AACAP,MAAAA,MAAM,CAACQ,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACAT,MAAAA,MAAM,CAACU,QAAP,CAAgBC,CAAhB,GAAoB,IAApB;AACAX,MAAAA,MAAM,CAACU,QAAP,CAAgBE,CAAhB,GAAoB,CAAC,IAArB;AACAZ,MAAAA,MAAM,CAACU,QAAP,CAAgBD,CAAhB,GAAoB,IAApB;AACA,UAAII,OAAO,GAAG,IAAIpB,KAAK,CAACqB,YAAV,CAAuB,QAAvB,CAAd;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAUF,OAAV;AACAZ,MAAAA,QAAQ,GAAG,IAAIR,KAAK,CAACuB,aAAV,EAAX;AACAf,MAAAA,QAAQ,CAACgB,OAAT,CAAiBZ,MAAM,CAACC,UAAxB,EAAmCD,MAAM,CAACE,WAA1C;AACAR,MAAAA,KAAK,CAACmB,GAAN,GAAY,IAAIzB,KAAK,CAAC0B,OAAV,CAAkB,QAAlB,EAA4B,KAA5B,CAAZ;AACAlB,MAAAA,QAAQ,CAACmB,aAAT,CAAuBrB,KAAK,CAACmB,GAAN,CAAUG,KAAjC;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BvB,QAAQ,CAACwB,UAAnC;AACAC,MAAAA,MAAM;AACP,KAfD;;AAgBA,QAAIA,MAAM,GAAG,YAAY;AACvBzB,MAAAA,QAAQ,CAACyB,MAAT,CAAgB3B,KAAhB,EAAsBC,MAAtB;AACA2B,MAAAA,qBAAqB,CAACD,MAAD,CAArB;AACD,KAHD;;AAIAxB,IAAAA,IAAI;AACL;;AAGHwB,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,wBAAf;AACA,MAAA,GAAG,EAAEE,KAAK,IAAI;AAAE,aAAKA,KAAL,GAAaA,KAAb;AAAmB,OADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAKE;;AAlCkC;;AAqC5C,eAAe/B,oBAAf","sourcesContent":["import React, { Component } from 'react'\nimport './content_pane_container.css'\nimport ListView from '../cardview/cardview_component'\nimport CardView from '../listview/listview_component'\nimport * as THREE from \"three\";\n\nfunction RenderedView(props){\n    if(props.listView == true){\n        return <CardView/>;\n    }\n    else{\n        return <ListView/>;\n    }\n}\n\nclass ContentPaneContainer extends Component{\n\n    componentDidMount() {\n        let scene, camera, renderer;\n        var init = function () {\n          scene = new THREE.Scene();\n          camera = new THREE.PerspectiveCamera(60,window.innerWidth / window.innerHeight,1,1000);\n          camera.position.z = 1;\n          camera.rotation.x = 1.16;\n          camera.rotation.y = -0.12;\n          camera.rotation.z = 0.27;\n          let ambient = new THREE.AmbientLight(0x555555);\n          scene.add(ambient);\n          renderer = new THREE.WebGLRenderer();\n          renderer.setSize(window.innerWidth,window.innerHeight);\n          scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n          renderer.setClearColor(scene.fog.color);\n          document.body.appendChild(renderer.domElement);\n          render();\n        }\n        var render=  function () {\n          renderer.render(scene,camera);\n          requestAnimationFrame(render);\n        }\n        init();\n      }\n\n\n    render() {\n        return (       \n        <div className=\"content-pane-container\"\n        ref={mount => { this.mount = mount}}>\n            {/* { <RenderedView listView={true}/> } */}\n        </div>\n        )}\n}\n\nexport default ContentPaneContainer;"]},"metadata":{},"sourceType":"module"}