{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js\";\nimport React, { Component } from 'react';\nimport './content_pane_container.css';\nimport ListView from '../cardview/cardview_component';\nimport CardView from '../listview/listview_component';\nimport * as THREE from \"three\";\n\nfunction RenderedView(props) {\n  if (props.listView == true) {\n    return /*#__PURE__*/React.createElement(CardView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(ListView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nclass ContentPaneContainer extends Component {\n  componentDidMount() {\n    let scene,\n        camera,\n        renderer,\n        cloudParticles = [];\n\n    var init = function (mount) {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 1;\n      camera.rotation.x = 1.16;\n      camera.rotation.y = -0.12;\n      camera.rotation.z = 0.27;\n      let ambient = new THREE.AmbientLight(0x555555);\n      scene.add(ambient);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n      renderer.setClearColor(scene.fog.color);\n      mount.appendChild(renderer.domElement);\n      let loader = new THREE.TextureLoader();\n      loader.load(\"smoke.png\", function (texture) {\n        cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n        cloudMaterial = new THREE.MeshLambertMaterial({\n          map: texture,\n          transparent: true\n        });\n\n        for (let p = 0; p < 77; p++) {\n          let cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n          cloud.position.set(Math.random() * 800 - 400, 500, Math.random() * 500 - 500);\n          cloud.rotation.x = 1.16;\n          cloud.rotation.y = -0.12;\n          cloud.rotation.z = Math.random() * 2 * Math.PI;\n          cloud.material.opacity = 0.55;\n          cloudParticles.push(cloud);\n          scene.add(cloud);\n        }\n      });\n      render();\n    };\n\n    var render = function () {\n      cloudParticles.forEach(p => {\n        p.rotation.z -= 0.001;\n      });\n      renderer.render(scene, camera);\n      requestAnimationFrame(render);\n    };\n\n    init(this.mount);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-pane-container\",\n      ref: mount => {\n        this.mount = mount;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ContentPaneContainer;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js"],"names":["React","Component","ListView","CardView","THREE","RenderedView","props","listView","ContentPaneContainer","componentDidMount","scene","camera","renderer","cloudParticles","init","mount","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","rotation","x","y","ambient","AmbientLight","add","WebGLRenderer","setSize","fog","FogExp2","setClearColor","color","appendChild","domElement","loader","TextureLoader","load","texture","cloudGeo","PlaneBufferGeometry","cloudMaterial","MeshLambertMaterial","map","transparent","p","cloud","Mesh","set","Math","random","PI","material","opacity","push","render","forEach","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './content_pane_container.css'\nimport ListView from '../cardview/cardview_component'\nimport CardView from '../listview/listview_component'\nimport * as THREE from \"three\";\n\nfunction RenderedView(props){\n    if(props.listView == true){\n        return <CardView/>;\n    }\n    else{\n        return <ListView/>;\n    }\n}\n\nclass ContentPaneContainer extends Component{\n\n    componentDidMount() {\n        let scene, camera, renderer, cloudParticles = [] ;\n        var init = function (mount) {\n          scene = new THREE.Scene();\n          camera = new THREE.PerspectiveCamera(60,window.innerWidth / window.innerHeight,1,1000);\n          camera.position.z = 1;\n          camera.rotation.x = 1.16;\n          camera.rotation.y = -0.12;\n          camera.rotation.z = 0.27;\n          let ambient = new THREE.AmbientLight(0x555555);\n          scene.add(ambient);\n          renderer = new THREE.WebGLRenderer();\n          renderer.setSize(window.innerWidth,window.innerHeight);\n          scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n          renderer.setClearColor(scene.fog.color);\n          mount.appendChild(renderer.domElement);\n\n          let loader = new THREE.TextureLoader();\n            loader.load(\"smoke.png\", function(texture){\n                cloudGeo = new THREE.PlaneBufferGeometry(500,500);\n                cloudMaterial = new THREE.MeshLambertMaterial({\n                map:texture,\n                transparent: true\n                });\n\n                for(let p=0; p<77; p++) {\n                    let cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n                    cloud.position.set(\n                      Math.random()*800 -400,\n                      500,\n                      Math.random()*500-500\n                    );\n                    cloud.rotation.x = 1.16;\n                    cloud.rotation.y = -0.12;\n                    cloud.rotation.z = Math.random()*2*Math.PI;\n                    cloud.material.opacity = 0.55;\n                    cloudParticles.push(cloud);\n                    scene.add(cloud);\n                  }\n            });\n\n          render();\n        }\n        \n        var render=  function () {\n          cloudParticles.forEach(p => {\n              p.rotation.z -= 0.001;\n          })\n          renderer.render(scene,camera);\n          requestAnimationFrame(render);\n        }\n        init(this.mount);\n      }\n\n\n    render() {\n        return (       \n        <div className=\"content-pane-container\"\n        ref={mount => { this.mount = mount}}>\n            {/* { <RenderedView listView={true}/> } */}\n        </div>\n        )}\n}\n\nexport default ContentPaneContainer;"]},"metadata":{},"sourceType":"module"}