{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js\";\nimport React, { useContext, useState } from 'react';\nimport { AppContentContext } from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport { AppSearchContext } from '../../context/app_search_context/AppSearchContext';\nimport { AppSearchAddendumContext } from '../../context/app_search_addendum_context/AppSearchAddendumContext';\n\nfunction SearchBar() {\n  const [content, setContent] = useContext(AppContentContext);\n  const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n  const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n  const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n\n  const updateContexts = async event => {\n    console.log(event.target.value);\n    setSearchAddendum(event.target.value);\n  };\n\n  const handleEnterKeyDown = async event => {\n    if (event.key === 'Enter') {\n      console.log(\"enter for http://localhost:8000/api/\" + search_paradigm + \"/\" + search_addendum);\n      setContent(\"PRESSED WORKING\");\n    }\n\n    if (event.key === 'Shift') {\n      console.log(\"auto-complete suggestion requested\");\n      setSearchAddendum(search_suggestion);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    input: search_addendum,\n    onChange: updateContexts,\n    placeholder: \"Procure \" + search_paradigm + \" in Neverlur\",\n    onKeyUp: handleEnterKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js"],"names":["React","useContext","useState","AppContentContext","AppMainSuggestionContext","AppSearchContext","AppSearchAddendumContext","SearchBar","content","setContent","search_paradigm","setSearchParadigm","search_suggestion","setSearchSuggestion","search_addendum","setSearchAddendum","updateContexts","event","console","log","target","value","handleEnterKeyDown","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,iBAAR,QAAgC,qDAAhC;AACA,SAASC,wBAAT,QAAyC,2EAAzC;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,wBAAR,QAAuC,oEAAvC;;AAGA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,UAAU,CAACE,iBAAD,CAAxC;AACA,QAAM,CAACO,eAAD,EAAkBC,iBAAlB,IAAuCV,UAAU,CAACI,gBAAD,CAAvD;AACA,QAAM,CAACO,iBAAD,EAAoBC,mBAApB,IAA2CZ,UAAU,CAACG,wBAAD,CAA3D;AACA,QAAM,CAACU,eAAD,EAAkBC,iBAAlB,IAAuCb,QAAQ,CAACI,wBAAD,CAArD;;AAEA,QAAMU,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,iBAAiB,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAjB;AACF,GAHF;;AAKC,QAAMC,kBAAkB,GAAG,MAAOL,KAAP,IAAiB;AACxC,QAAIA,KAAK,CAACM,GAAN,KAAc,OAAlB,EAA2B;AACvBL,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCT,eAAvC,GAAuD,GAAvD,GAA2DI,eAAvE;AACAL,MAAAA,UAAU,CAAC,iBAAD,CAAV;AACH;;AACD,QAAGQ,KAAK,CAACM,GAAN,KAAc,OAAjB,EAAyB;AACrBL,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAJ,MAAAA,iBAAiB,CAACH,iBAAD,CAAjB;AACH;AAEJ,GAVD;;AAYD,sBACE;AACA,IAAA,KAAK,EAAIE,eADT;AAEA,IAAA,QAAQ,EAAIE,cAFZ;AAGA,IAAA,WAAW,EAAE,aAAaN,eAAb,GAA+B,cAH5C;AAIA,IAAA,OAAO,EAAEY,kBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD;;AAEH,eAAef,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport {AppContentContext} from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport {AppSearchContext} from '../../context/app_search_context/AppSearchContext'\nimport {AppSearchAddendumContext} from '../../context/app_search_addendum_context/AppSearchAddendumContext'\n\n\nfunction SearchBar() {\n    const [content, setContent] = useContext(AppContentContext);\n    const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n    const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n    const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n    \n    const updateContexts = async (event) => {\n        console.log(event.target.value);\n        setSearchAddendum(event.target.value);\n     }\n \n     const handleEnterKeyDown = async (event) => {\n         if (event.key === 'Enter') {\n             console.log(\"enter for http://localhost:8000/api/\"+search_paradigm+\"/\"+search_addendum);\n             setContent(\"PRESSED WORKING\");\n         }\n         if(event.key === 'Shift'){\n             console.log(\"auto-complete suggestion requested\")\n             setSearchAddendum(search_suggestion);\n         }\n\n     }\n\n    return (\n      <input\n      input = {search_addendum}\n      onChange = {updateContexts}\n      placeholder={\"Procure \" + search_paradigm + \" in Neverlur\"}\n      onKeyUp={handleEnterKeyDown} />\n    );\n  }\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}