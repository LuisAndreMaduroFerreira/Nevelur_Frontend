{"ast":null,"code":"import axios from 'axios';\nexport const fetchGenreData = () => {\n  const genrePromise = fetchGenre();\n  return {\n    genre: wrapPromise(genrePromise)\n  };\n};\n\nconst wrapPromise = promise => {\n  let result;\n  let status = 'pending';\n  let suspender = promise.then(response => {\n    status = 'success';\n    result = response;\n  }, error => {\n    status = 'error';\n    result = error;\n  });\n  return {\n    read() {\n      if (status === 'pending') {\n        throw suspender;\n      } else if (status === 'error') {\n        throw result;\n      } else if (status === 'success') {\n        throw result;\n      }\n    }\n\n  };\n};\n\nconst fetchGenre = () => {\n  console.log('Requesting genre...');\n  return axios.get('http://localhost:8000/api/genres/1/').then(response = response.data).catch(error => console.log(error));\n};","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/API_requests/test_request.js"],"names":["axios","fetchGenreData","genrePromise","fetchGenre","genre","wrapPromise","promise","result","status","suspender","then","response","error","read","console","log","get","data","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAC9B;AACI,QAAMC,YAAY,GAAGC,UAAU,EAA/B;AACA,SAAQ;AACJC,IAAAA,KAAK,EAAEC,WAAW,CAACH,YAAD;AADd,GAAR;AAGH,CANM;;AAQP,MAAMG,WAAW,GAAGC,OAAO,IAAI;AAC3B,MAAIC,MAAJ;AACA,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACI,IAAR,CACZC,QAAQ,IAAI;AACRH,IAAAA,MAAM,GAAG,SAAT;AACAD,IAAAA,MAAM,GAAGI,QAAT;AACH,GAJW,EAKZC,KAAK,IAAI;AACJJ,IAAAA,MAAM,GAAG,OAAT;AACAD,IAAAA,MAAM,GAAGK,KAAT;AACJ,GARW,CAAhB;AAWA,SAAO;AACHC,IAAAA,IAAI,GAAE;AACF,UAAGL,MAAM,KAAK,SAAd,EAAyB;AACrB,cAAMC,SAAN;AACH,OAFD,MAGK,IAAGD,MAAM,KAAK,OAAd,EAAuB;AACxB,cAAMD,MAAN;AACH,OAFI,MAGA,IAAGC,MAAM,KAAK,SAAd,EAAyB;AAC1B,cAAMD,MAAN;AACH;AAEJ;;AAZE,GAAP;AAcH,CA5BD;;AA8BA,MAAMJ,UAAU,GAAG,MAAM;AACrBW,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAOf,KAAK,CACPgB,GADE,CACE,qCADF,EAEFN,IAFE,CAEGC,QAAQ,GAAGA,QAAQ,CAACM,IAFvB,EAGFC,KAHE,CAGIN,KAAK,IAAIE,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAHb,CAAP;AAIH,CAND","sourcesContent":["import axios from 'axios';\n\nexport const fetchGenreData = () => \n{\n    const genrePromise = fetchGenre();\n    return  {\n        genre: wrapPromise(genrePromise)\n    }\n}\n\nconst wrapPromise = promise => {\n    let result;\n    let status = 'pending';\n    let suspender = promise.then(\n        response => {\n            status = 'success';\n            result = response;\n        },\n        error => {\n             status = 'error';\n             result = error;\n        }\n    );\n\n    return {\n        read(){\n            if(status === 'pending') {\n                throw suspender;\n            }\n            else if(status === 'error') {\n                throw result;\n            }\n            else if(status === 'success') {\n                throw result;\n            }\n\n        }\n    }\n}\n\nconst fetchGenre = () => {\n    console.log('Requesting genre...');\n    return axios\n        .get('http://localhost:8000/api/genres/1/')\n        .then(response = response.data)\n        .catch(error => console.log(error));\n}"]},"metadata":{},"sourceType":"module"}