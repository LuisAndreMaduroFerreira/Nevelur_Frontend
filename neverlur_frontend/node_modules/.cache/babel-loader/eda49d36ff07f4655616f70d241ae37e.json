{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js\";\nimport React, { useContext, useState } from 'react';\nimport { fetchSuggestionData } from '../../request/fetch_info/fetch_suggestion_data';\nimport { AppContentContext } from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport { AppSearchContext } from '../../context/app_search_context/AppSearchContext';\nimport { AppSearchAddendumContext } from '../../context/app_search_addendum_context/AppSearchAddendumContext';\nimport { build_api_request_url } from '../../request/build_request_url';\nimport './SearchBar.css';\n\nfunction SearchBar() {\n  const [content, setContent] = useContext(AppContentContext);\n  const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n  const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n  const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n\n  const updateContexts = async event => {\n    setSearchAddendum(event.target.value);\n    console.log(event.target.value);\n    const url = build_api_request_url(\"neverlur_backend_api\", \"genres/suggestions\", event.target.value);\n    console.log(url); // console.log(\"would search http://localhost:8000/api/suggestions\"+search_paradigm+\"/\"+search_addendum+\"/\")\n    // const resource = fetchSuggestionData(search_addendum, search_paradigm);\n    //console.log(\"would ask continuation for\"+search_addendum+\" in \"+search_paradigm);\n    //async get suggestion string\n  };\n\n  const handleEnterKeyDown = async event => {\n    if (event.key === 'Enter') {\n      console.log(\"enter for http://localhost:8000/api/\" + search_paradigm + \"/\" + search_addendum);\n      setContent(\"PRESSED WORKING\"); //async get queues\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"searchbar-element\",\n    input: search_addendum,\n    onChange: updateContexts,\n    placeholder: \"Procure \" + search_paradigm + \" in Neverlur\",\n    onKeyUp: handleEnterKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js"],"names":["React","useContext","useState","fetchSuggestionData","AppContentContext","AppMainSuggestionContext","AppSearchContext","AppSearchAddendumContext","build_api_request_url","SearchBar","content","setContent","search_paradigm","setSearchParadigm","search_suggestion","setSearchSuggestion","search_addendum","setSearchAddendum","updateContexts","event","target","value","console","log","url","handleEnterKeyDown","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,mBAAT,QAAoC,gDAApC;AACA,SAAQC,iBAAR,QAAgC,qDAAhC;AACA,SAASC,wBAAT,QAAyC,2EAAzC;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,wBAAR,QAAuC,oEAAvC;AACA,SAAQC,qBAAR,QAAoC,iCAApC;AACA,OAAO,iBAAP;;AAGA,SAASC,SAAT,GAAqB;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,UAAU,CAACG,iBAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,iBAAlB,IAAuCZ,UAAU,CAACK,gBAAD,CAAvD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,mBAApB,IAA2Cd,UAAU,CAACI,wBAAD,CAA3D;AACA,QAAM,CAACW,eAAD,EAAkBC,iBAAlB,IAAuCf,QAAQ,CAACK,wBAAD,CAArD;;AAEA,QAAMW,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACpCF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,UAAMG,GAAG,GAAGhB,qBAAqB,CAAC,sBAAD,EAAyB,oBAAzB,EAA+CW,KAAK,CAACC,MAAN,CAAaC,KAA5D,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAJoC,CAKpC;AACA;AAEA;AAEA;AAEF,GAZF;;AAcC,QAAMC,kBAAkB,GAAG,MAAON,KAAP,IAAiB;AAC3C,QAAIA,KAAK,CAACO,GAAN,KAAc,OAAlB,EAA2B;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCX,eAAvC,GAAuD,GAAvD,GAA2DI,eAAvE;AACAL,MAAAA,UAAU,CAAC,iBAAD,CAAV,CAFoB,CAGpB;AACH;AAEJ,GAPD;;AASD,sBACE;AACA,IAAA,SAAS,EAAG,mBADZ;AAEA,IAAA,KAAK,EAAIK,eAFT;AAGA,IAAA,QAAQ,EAAIE,cAHZ;AAIA,IAAA,WAAW,EAAE,aAAaN,eAAb,GAA+B,cAJ5C;AAKA,IAAA,OAAO,EAAEa,kBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAEH,eAAehB,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { fetchSuggestionData } from '../../request/fetch_info/fetch_suggestion_data'\nimport {AppContentContext} from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport {AppSearchContext} from '../../context/app_search_context/AppSearchContext'\nimport {AppSearchAddendumContext} from '../../context/app_search_addendum_context/AppSearchAddendumContext'\nimport {build_api_request_url} from '../../request/build_request_url'\nimport './SearchBar.css';\n\n\nfunction SearchBar() {\n\n    const [content, setContent] = useContext(AppContentContext);\n    const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n    const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n    const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n    \n    const updateContexts = async (event) => {\n        setSearchAddendum(event.target.value);\n        console.log(event.target.value);\n        const url = build_api_request_url(\"neverlur_backend_api\", \"genres/suggestions\", event.target.value)\n        console.log(url);\n        // console.log(\"would search http://localhost:8000/api/suggestions\"+search_paradigm+\"/\"+search_addendum+\"/\")\n        // const resource = fetchSuggestionData(search_addendum, search_paradigm);\n        \n        //console.log(\"would ask continuation for\"+search_addendum+\" in \"+search_paradigm);\n        \n        //async get suggestion string\n\n     }\n \n     const handleEnterKeyDown = async (event) => {\n      if (event.key === 'Enter') {\n             console.log(\"enter for http://localhost:8000/api/\"+search_paradigm+\"/\"+search_addendum);\n             setContent(\"PRESSED WORKING\");\n             //async get queues\n         }\n\n     }\n\n    return (\n      <input\n      className = \"searchbar-element\"\n      input = {search_addendum}\n      onChange = {updateContexts}\n      placeholder={\"Procure \" + search_paradigm + \" in Neverlur\"}\n      onKeyUp={handleEnterKeyDown} />\n    );\n  }\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}