{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/components/modalbar/modalbar_component.js\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport React, { Component } from 'react';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\nexport default class ToggleSwitchBar extends Component {\n  render() {\n    const {\n      enabled\n    } = this.state; // Isolate special props and store the remaining as restProps\n\n    const {\n      enabled: _enabled,\n      theme,\n      onClick,\n      className,\n      onStateChanged,\n      ...restProps\n    } = this.props; // Use default as a fallback theme if valid theme is not passed\n\n    const switchTheme = theme && isString(theme) ? theme : 'default';\n    const switchClasses = classnames(`switch switch--${switchTheme}`, className);\n    const togglerClasses = classnames('switch-toggle', `switch-toggle--${enabled ? 'on' : 'off'}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalbar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalbar-switchbar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: switchClasses,\n      onClick: this.toggleSwitch\n    }, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: togglerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/components/modalbar/modalbar_component.js"],"names":["PropTypes","classnames","isString","React","Component","isBoolean","isFunction","ToggleSwitchBar","render","enabled","state","_enabled","theme","onClick","className","onStateChanged","restProps","props","switchTheme","switchClasses","togglerClasses","toggleSwitch"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAEvDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB,CADK,CAGL;;AACA,UAAM;AAAED,MAAAA,OAAO,EAAEE,QAAX;AAAqBC,MAAAA,KAArB;AAA4BC,MAAAA,OAA5B;AAAqCC,MAAAA,SAArC;AAAgDC,MAAAA,cAAhD;AAAgE,SAAGC;AAAnE,QAAiF,KAAKC,KAA5F,CAJK,CAML;;AACA,UAAMC,WAAW,GAAIN,KAAK,IAAIV,QAAQ,CAACU,KAAD,CAAlB,GAA6BA,KAA7B,GAAqC,SAAzD;AAEA,UAAMO,aAAa,GAAGlB,UAAU,CAC7B,kBAAiBiB,WAAY,EADA,EAE9BJ,SAF8B,CAAhC;AAKA,UAAMM,cAAc,GAAGnB,UAAU,CAC/B,eAD+B,EAE9B,kBAAiBQ,OAAO,GAAG,IAAH,GAAU,KAAM,EAFV,CAAjC;AAKA,wBACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF;AAAK,MAAA,SAAS,EAAEU,aAAhB;AAA+B,MAAA,OAAO,EAAE,KAAKE;AAA7C,OAA+DL,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE;AAAK,MAAA,SAAS,EAAEI,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADE,CADJ,CADA;AASD;;AA9BoD","sourcesContent":["import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport React, { Component } from 'react';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\n\nexport default class ToggleSwitchBar extends Component {\n \nrender() {\n    const { enabled } = this.state;\n\n    // Isolate special props and store the remaining as restProps\n    const { enabled: _enabled, theme, onClick, className, onStateChanged, ...restProps } = this.props;\n\n    // Use default as a fallback theme if valid theme is not passed\n    const switchTheme = (theme && isString(theme)) ? theme : 'default';\n\n    const switchClasses = classnames(\n      `switch switch--${switchTheme}`,\n      className\n    )\n\n    const togglerClasses = classnames(\n      'switch-toggle',\n      `switch-toggle--${enabled ? 'on' : 'off'}`\n    )\n\n    return (\n    <div className=\"modalbar-container\">\n        <div className=\"modalbar-switchbar-container\">\n      <div className={switchClasses} onClick={this.toggleSwitch} {...restProps}>\n        <div className={togglerClasses}></div>\n      </div>\n      </div>\n    </div>\n    )\n  }\n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}