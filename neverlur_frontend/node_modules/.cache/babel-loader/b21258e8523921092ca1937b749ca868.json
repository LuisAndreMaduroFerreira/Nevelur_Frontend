{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/components/modalbar/modalbar_component.js\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport React, { Component } from 'react';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\nimport './modalbar_component.css';\nexport default class ToggleSwitchBar {\n  constructor() {\n    this.state = {\n      enabled: this.enabledFromProps()\n    };\n\n    this.isEnabled = () => this.state.enabled;\n  }\n\n  enabledFromProps() {\n    let {\n      enabled\n    } = this.props; // If enabled is a function, invoke the function\n\n    enabled = isFunction(enabled) ? enabled() : enabled; // Return enabled if it is a boolean, otherwise false\n\n    return isBoolean(enabled) && enabled;\n  }\n\n  render() {\n    const {\n      enabled\n    } = this.state; // Isolate special props and store the remaining as restProps\n\n    const {\n      enabled: _enabled,\n      theme,\n      onClick,\n      className,\n      onStateChanged,\n      ...restProps\n    } = this.props; // Use default as a fallback theme if valid theme is not passed\n\n    const switchTheme = theme && isString(theme) ? theme : 'default';\n    const switchClasses = classnames(`switch switch--${switchTheme}`, className);\n    const togglerClasses = classnames('switch-toggle', `switch-toggle--${enabled ? 'on' : 'off'}`);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalbar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalbar-switch-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: switchClasses,\n      onClick: this.toggleSwitch\n    }, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: togglerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/components/modalbar/modalbar_component.js"],"names":["PropTypes","classnames","isString","React","Component","isBoolean","isFunction","ToggleSwitchBar","state","enabled","enabledFromProps","isEnabled","props","render","_enabled","theme","onClick","className","onStateChanged","restProps","switchTheme","switchClasses","togglerClasses","toggleSwitch"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,0BAAP;AAEA,eAAe,MAAMC,eAAN,CAAsB;AAAA;AAAA,SACjCC,KADiC,GACzB;AAAEC,MAAAA,OAAO,EAAE,KAAKC,gBAAL;AAAX,KADyB;;AAAA,SAGjCC,SAHiC,GAGrB,MAAM,KAAKH,KAAL,CAAWC,OAHI;AAAA;;AAKjCC,EAAAA,gBAAgB,GAAG;AACf,QAAI;AAAED,MAAAA;AAAF,QAAc,KAAKG,KAAvB,CADe,CAGnB;;AACAH,IAAAA,OAAO,GAAGH,UAAU,CAACG,OAAD,CAAV,GAAsBA,OAAO,EAA7B,GAAkCA,OAA5C,CAJmB,CAMnB;;AACA,WAAOJ,SAAS,CAACI,OAAD,CAAT,IAAsBA,OAA7B;AACC;;AAELI,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKD,KAAzB,CAFK,CAIL;;AACA,UAAM;AAAEC,MAAAA,OAAO,EAAEK,QAAX;AAAqBC,MAAAA,KAArB;AAA4BC,MAAAA,OAA5B;AAAqCC,MAAAA,SAArC;AAAgDC,MAAAA,cAAhD;AAAgE,SAAGC;AAAnE,QAAiF,KAAKP,KAA5F,CALK,CAOL;;AACA,UAAMQ,WAAW,GAAIL,KAAK,IAAIb,QAAQ,CAACa,KAAD,CAAlB,GAA6BA,KAA7B,GAAqC,SAAzD;AAEA,UAAMM,aAAa,GAAGpB,UAAU,CAC7B,kBAAiBmB,WAAY,EADA,EAE9BH,SAF8B,CAAhC;AAKA,UAAMK,cAAc,GAAGrB,UAAU,CAC/B,eAD+B,EAE9B,kBAAiBQ,OAAO,GAAG,IAAH,GAAU,KAAM,EAFV,CAAjC;AAKA,wBACI,uDACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN;AAAK,MAAA,SAAS,EAAEY,aAAhB;AAA+B,MAAA,OAAO,EAAE,KAAKE;AAA7C,OAA+DJ,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACF;AAAK,MAAA,SAAS,EAAEG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,CADM,CADJ,CADJ,CADA,CADJ;AAaD;;AAhDkC","sourcesContent":["import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString';\nimport React, { Component } from 'react';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\nimport './modalbar_component.css';\n\nexport default class ToggleSwitchBar {\n    state = { enabled: this.enabledFromProps() }\n\n    isEnabled = () => this.state.enabled\n\n    enabledFromProps() {\n        let { enabled } = this.props;\n\n    // If enabled is a function, invoke the function\n    enabled = isFunction(enabled) ? enabled() : enabled;\n\n    // Return enabled if it is a boolean, otherwise false\n    return isBoolean(enabled) && enabled;\n    }\n\nrender() {\n\n    const { enabled } = this.state;\n\n    // Isolate special props and store the remaining as restProps\n    const { enabled: _enabled, theme, onClick, className, onStateChanged, ...restProps } = this.props;\n\n    // Use default as a fallback theme if valid theme is not passed\n    const switchTheme = (theme && isString(theme)) ? theme : 'default';\n\n    const switchClasses = classnames(\n      `switch switch--${switchTheme}`,\n      className\n    )\n\n    const togglerClasses = classnames(\n      'switch-toggle',\n      `switch-toggle--${enabled ? 'on' : 'off'}`\n    )\n\n    return (\n        <>\n        <nav className=\"navbar\"> \n            <div className=\"modalbar-container\">\n                <div className=\"modalbar-switch-container\">\n          <div className={switchClasses} onClick={this.toggleSwitch} {...restProps}>\n        <div className={togglerClasses}></div>\n      </div>\n      </div>\n      </div>\n      </nav>\n      </>\n    )\n  }\n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}