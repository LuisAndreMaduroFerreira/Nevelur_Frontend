{"ast":null,"code":"import axios from 'axios';\nexport const fetchGenreData = () => {\n  const genrePromise = fetchGenre();\n  return {\n    genre: wrapPromise(genrePromise)\n  };\n};\n\nconst wrapPromise = promise => {\n  let status = 'pending';\n  let result;\n  let suspender = promise.then(res => {\n    status = 'success';\n    result = res;\n  }, err => {\n    status = 'error';\n    result = err;\n  });\n  return {\n    read() {\n      if (status === 'pending') {\n        throw 'suspender';\n      } else if (status === 'error') {\n        throw result;\n      } else if (status === 'success') {\n        throw result;\n      }\n    }\n\n  };\n};\n\nconst fetchGenre = () => {\n  console.log('Requesting genre...');\n  return axios.get('http://localhost:8000/api/genres/1/').then(resp = resp.data).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/API_requests/test_request.js"],"names":["axios","fetchGenreData","genrePromise","fetchGenre","genre","wrapPromise","promise","status","result","suspender","then","res","err","read","console","log","get","resp","data","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAC9B;AACI,QAAMC,YAAY,GAAGC,UAAU,EAA/B;AACA,SAAQ;AACJC,IAAAA,KAAK,EAAEC,WAAW,CAACH,YAAD;AADd,GAAR;AAGH,CANM;;AAQP,MAAMG,WAAW,GAAIC,OAAD,IAAa;AAC7B,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,MAAJ;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACI,IAAR,CACZC,GAAG,IAAI;AACHJ,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,MAAM,GAAGG,GAAT;AACH,GAJW,EAKXC,GAAG,IAAI;AACHL,IAAAA,MAAM,GAAG,OAAT;AACAC,IAAAA,MAAM,GAAGI,GAAT;AACH,GARU,CAAhB;AAWA,SAAO;AACHC,IAAAA,IAAI,GAAE;AACF,UAAGN,MAAM,KAAK,SAAd,EACA;AACI,cAAM,WAAN;AACH,OAHD,MAIK,IAAGA,MAAM,KAAK,OAAd,EACL;AACI,cAAMC,MAAN;AACH,OAHI,MAIA,IAAGD,MAAM,KAAK,SAAd,EACL;AACI,cAAMC,MAAN;AACH;AAEJ;;AAfE,GAAP;AAiBH,CA/BD;;AAiCA,MAAML,UAAU,GAAG,MAAM;AACrBW,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAOf,KAAK,CAACgB,GAAN,CAAU,qCAAV,EACFN,IADE,CACGO,IAAI,GAAGA,IAAI,CAACC,IADf,EAEFC,KAFE,CAEIP,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAFX,CAAP;AAGH,CALD","sourcesContent":["import axios from 'axios';\n\nexport const fetchGenreData = () => \n{\n    const genrePromise = fetchGenre();\n    return  {\n        genre: wrapPromise(genrePromise)\n    }\n}\n\nconst wrapPromise = (promise) => {\n    let status = 'pending';\n    let result;\n    let suspender = promise.then(\n        res => {\n            status = 'success';\n            result = res;\n        },\n         err => {\n             status = 'error';\n             result = err;\n         }\n    );\n\n    return {\n        read(){\n            if(status === 'pending')\n            {\n                throw 'suspender';\n            }\n            else if(status === 'error')\n            {\n                throw result;\n            }\n            else if(status === 'success')\n            {\n                throw result;\n            }\n\n        }\n    }\n}\n\nconst fetchGenre = () => {\n    console.log('Requesting genre...');\n    return axios.get('http://localhost:8000/api/genres/1/')\n        .then(resp = resp.data)\n        .catch(err => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}