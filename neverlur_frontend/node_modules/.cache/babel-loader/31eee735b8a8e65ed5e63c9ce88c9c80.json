{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js\";\nimport React, { Component } from 'react';\nimport './content_pane_container.css';\nimport ListView from '../cardview/cardview_component';\nimport CardView from '../listview/listview_component';\nimport * as THREE from \"three\";\nimport ReactDOM from \"react-dom\";\nimport { render } from 'node-sass';\n\nfunction RenderedView(props) {\n  if (props.listView == true) {\n    return /*#__PURE__*/React.createElement(CardView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(ListView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nclass ContentPaneContainer extends Component {\n  componentDidMount() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n    this.camera.position.z = 1;\n    this.camera.rotation.x = 1.16;\n    this.camera.rotation.y = -0.12;\n    this.camera.rotation.z = 0.27;\n    var ambient = new THREE.AmbientLight(0x555555);\n    this.scene.add(ambient);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n    this.renderer.setClearColor(this.scene.fog.color);\n    this.mount.appendChild(this.renderer.domElement);\n    render();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-pane-container\",\n      ref: mount => {\n        this.mount = mount;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ContentPaneContainer;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/contentpanecontainer/content_pane_container.js"],"names":["React","Component","ListView","CardView","THREE","ReactDOM","render","RenderedView","props","listView","ContentPaneContainer","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","rotation","x","y","ambient","AmbientLight","add","renderer","WebGLRenderer","setSize","fog","FogExp2","setClearColor","color","mount","appendChild","domElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,MAAGA,KAAK,CAACC,QAAN,IAAkB,IAArB,EAA0B;AACtB,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGI;AACA,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ;;AAED,MAAMC,oBAAN,SAAmCT,SAAnC,CAA4C;AAIxCU,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,GAAa,IAAIR,KAAK,CAACS,KAAV,EAAb;AACA,SAAKC,MAAL,GAAc,IAAIV,KAAK,CAACW,iBAAV,CAA4B,EAA5B,EAA+BC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA1D,EAAsE,CAAtE,EAAwE,IAAxE,CAAd;AACA,SAAKJ,MAAL,CAAYK,QAAZ,CAAqBC,CAArB,GAAyB,CAAzB;AACA,SAAKN,MAAL,CAAYO,QAAZ,CAAqBC,CAArB,GAAyB,IAAzB;AACA,SAAKR,MAAL,CAAYO,QAAZ,CAAqBE,CAArB,GAAyB,CAAC,IAA1B;AACA,SAAKT,MAAL,CAAYO,QAAZ,CAAqBD,CAArB,GAAyB,IAAzB;AACA,QAAII,OAAO,GAAG,IAAIpB,KAAK,CAACqB,YAAV,CAAuB,QAAvB,CAAd;AACA,SAAKb,KAAL,CAAWc,GAAX,CAAeF,OAAf;AACA,SAAKG,QAAL,GAAgB,IAAIvB,KAAK,CAACwB,aAAV,EAAhB;AACA,SAAKD,QAAL,CAAcE,OAAd,CAAsBb,MAAM,CAACC,UAA7B,EAAwCD,MAAM,CAACE,WAA/C;AACA,SAAKN,KAAL,CAAWkB,GAAX,GAAiB,IAAI1B,KAAK,CAAC2B,OAAV,CAAkB,QAAlB,EAA4B,KAA5B,CAAjB;AACA,SAAKJ,QAAL,CAAcK,aAAd,CAA4B,KAAKpB,KAAL,CAAWkB,GAAX,CAAeG,KAA3C;AACA,SAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKR,QAAL,CAAcS,UAArC;AACA9B,IAAAA,MAAM;AACT;;AAGDA,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,wBAAf;AACA,MAAA,GAAG,EAAE4B,KAAK,IAAI;AAAE,aAAKA,KAAL,GAAaA,KAAb;AAAmB,OADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAKE;;AA5BkC;;AA+B5C,eAAexB,oBAAf","sourcesContent":["import React, { Component } from 'react'\nimport './content_pane_container.css'\nimport ListView from '../cardview/cardview_component'\nimport CardView from '../listview/listview_component'\nimport * as THREE from \"three\";\nimport ReactDOM from \"react-dom\";\nimport { render } from 'node-sass';\n\nfunction RenderedView(props){\n    if(props.listView == true){\n        return <CardView/>;\n    }\n    else{\n        return <ListView/>;\n    }\n}\n\nclass ContentPaneContainer extends Component{\n\n   \n\n    componentDidMount(){\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(60,window.innerWidth / window.innerHeight,1,1000);\n        this.camera.position.z = 1;\n        this.camera.rotation.x = 1.16;\n        this.camera.rotation.y = -0.12;\n        this.camera.rotation.z = 0.27;\n        var ambient = new THREE.AmbientLight(0x555555);\n        this.scene.add(ambient);\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(window.innerWidth,window.innerHeight);\n        this.scene.fog = new THREE.FogExp2(0x03544e, 0.001);\n        this.renderer.setClearColor(this.scene.fog.color);\n        this.mount.appendChild(this.renderer.domElement);\n        render();\n    };\n\n\n    render() {\n        return (        \n        <div className=\"content-pane-container\"\n        ref={mount => { this.mount = mount}}>\n            {/* { <RenderedView listView={true}/> } */}\n        </div>\n        )}\n}\n\nexport default ContentPaneContainer;"]},"metadata":{},"sourceType":"module"}