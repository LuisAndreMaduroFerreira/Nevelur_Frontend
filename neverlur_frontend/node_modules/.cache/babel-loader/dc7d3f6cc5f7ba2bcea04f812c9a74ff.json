{"ast":null,"code":"export const fetchGenreData = () => {\n  const genrePromise = fetchGenre();\n  console.log(\"TYPE1\");\n  return {\n    genre: wrapPromise(genrePromise)\n  };\n};\n\nconst wrapPromise = promise => {\n  let result;\n  let status = 'pending';\n  let suspender = promise.then(response => {\n    status = 'success';\n    result = response;\n  }, error => {\n    status = 'error';\n    result = error;\n  });\n  console.log(\"TYPE2\");\n  return {\n    read() {\n      if (status === 'pending') {\n        throw suspender;\n      } else if (status === 'error') {\n        throw result;\n      } else if (status === 'success') {\n        console.log(result);\n        return result;\n      }\n    }\n\n  };\n};\n/*\nconst handleGetJson = (url) => {\n    console.log(\"fetching\" + url);\n    fetch(url, {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n      })\n      .then((response) => response.json())\n      .catch(error => {console.log(error)})\n      .then((messages) => {console.log(\"messages\");});\n  }\n\nconst fetchGenre = () => handleGetJson(\n    'http://localhost:8000/api/genres/1/');\n*/\n\n\nconst fetchGenre = () => fetch('http://localhost:8000/api/genres/1/').then(response => response.json()).catch(error => console.trace());","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/API_requests/test_request.js"],"names":["fetchGenreData","genrePromise","fetchGenre","console","log","genre","wrapPromise","promise","result","status","suspender","then","response","error","read","fetch","json","catch","trace"],"mappings":"AACA,OAAO,MAAMA,cAAc,GAAG,MAAM;AAChC,QAAMC,YAAY,GAAGC,UAAU,EAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAQ;AACJC,IAAAA,KAAK,EAAEC,WAAW,CAACL,YAAD;AADd,GAAR;AAGH,CANM;;AAQP,MAAMK,WAAW,GAAGC,OAAO,IAAI;AAC3B,MAAIC,MAAJ;AACA,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACI,IAAR,CACZC,QAAQ,IAAI;AACRH,IAAAA,MAAM,GAAG,SAAT;AACAD,IAAAA,MAAM,GAAGI,QAAT;AACH,GAJW,EAKZC,KAAK,IAAI;AACJJ,IAAAA,MAAM,GAAG,OAAT;AACAD,IAAAA,MAAM,GAAGK,KAAT;AACJ,GARW,CAAhB;AAUAV,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAO;AACHU,IAAAA,IAAI,GAAE;AACF,UAAGL,MAAM,KAAK,SAAd,EAAyB;AACrB,cAAMC,SAAN;AACH,OAFD,MAGK,IAAGD,MAAM,KAAK,OAAd,EAAuB;AACxB,cAAMD,MAAN;AACH,OAFI,MAGA,IAAGC,MAAM,KAAK,SAAd,EAAyB;AAC1BN,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,eAAOA,MAAP;AACH;AAEJ;;AAbE,GAAP;AAeH,CA7BD;AA+BA;;;;;;;;;;;;;;;;;;;AAkBA,MAAMN,UAAU,GAAG,MAAMa,KAAK,CAAC,qCAAD,CAAL,CACpBJ,IADoB,CACfC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EADG,EAEpBC,KAFoB,CAEdJ,KAAK,IAAIV,OAAO,CAACe,KAAR,EAFK,CAAzB","sourcesContent":["\nexport const fetchGenreData = () => {\n    const genrePromise = fetchGenre();\n    console.log(\"TYPE1\")\n    return  {\n        genre: wrapPromise(genrePromise)\n    }\n}\n\nconst wrapPromise = promise => {\n    let result;\n    let status = 'pending';\n    let suspender = promise.then(\n        response => {\n            status = 'success';\n            result = response;\n        },\n        error => {\n             status = 'error';\n             result = error;\n        });\n    \n    console.log(\"TYPE2\")\n    return {\n        read(){\n            if(status === 'pending') {\n                throw suspender;\n            }\n            else if(status === 'error') {\n                throw result;\n            }\n            else if(status === 'success') {\n                console.log(result)\n                return result;\n            }\n\n        }\n    }\n}\n\n/*\nconst handleGetJson = (url) => {\n    console.log(\"fetching\" + url);\n    fetch(url, {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n      })\n      .then((response) => response.json())\n      .catch(error => {console.log(error)})\n      .then((messages) => {console.log(\"messages\");});\n  }\n\nconst fetchGenre = () => handleGetJson(\n    'http://localhost:8000/api/genres/1/');\n*/\n\nconst fetchGenre = () => fetch('http://localhost:8000/api/genres/1/')\n    .then(response => response.json())\n    .catch(error => console.trace());"]},"metadata":{},"sourceType":"module"}