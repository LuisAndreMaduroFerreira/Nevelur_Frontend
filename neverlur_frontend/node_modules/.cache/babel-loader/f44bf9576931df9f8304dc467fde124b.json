{"ast":null,"code":"var _jsxFileName = \"/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js\";\nimport React, { useContext, useState } from 'react';\nimport { fetchSuggestionData } from '../../request/fetch_info/axios/axios_fetch_suggestion_data';\nimport { AppContentContext } from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport { AppSearchContext } from '../../context/app_search_context/AppSearchContext';\nimport { AppSearchAddendumContext } from '../../context/app_search_addendum_context/AppSearchAddendumContext';\nimport { build_api_request_url } from '../../request/build_request_url';\nimport './SearchBar.css';\n\nconst axios = require('axios');\n\nfunction SearchBar() {\n  const [content, setContent] = useContext(AppContentContext);\n  const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n  const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n  const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n\n  const updateContexts = async event => {\n    if (event.target.value.length > 3) {\n      setSearchAddendum(event.target.value);\n      const url = build_api_request_url(\"neverlur_backend_api\", \"suggestions/\" + search_paradigm, event.target.value);\n      const response = await fetchSuggestionData(url);\n      console.log(\"GOT A \", response); //setContent(response);\n    } // console.log(\"would search http://localhost:8000/api/suggestions\"+search_paradigm+\"/\"+search_addendum+\"/\")\n    // const resource = fetchSuggestionData(search_addendum, search_paradigm);\n    //console.log(\"would ask continuation for\"+search_addendum+\" in \"+search_paradigm);\n    //async get suggestion string\n\n  };\n\n  const handleEnterKeyDown = async event => {\n    if (event.key === 'Enter') {\n      console.log(\"enter for http://localhost:8000/api/\" + search_paradigm + \"/\" + search_addendum);\n      setContent(\"PRESSED WORKING\"); //async get queues\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"searchbar-element\",\n    input: search_addendum,\n    onChange: updateContexts,\n    placeholder: \"Procure \" + search_paradigm + \" in Neverlur\",\n    onKeyUp: handleEnterKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/lasmf/Bragr_Frontend/bragr_frontend/src/component/searchbar/SearchBar.js"],"names":["React","useContext","useState","fetchSuggestionData","AppContentContext","AppMainSuggestionContext","AppSearchContext","AppSearchAddendumContext","build_api_request_url","axios","require","SearchBar","content","setContent","search_paradigm","setSearchParadigm","search_suggestion","setSearchSuggestion","search_addendum","setSearchAddendum","updateContexts","event","target","value","length","url","response","console","log","handleEnterKeyDown","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,mBAAT,QAAoC,4DAApC;AACA,SAAQC,iBAAR,QAAgC,qDAAhC;AACA,SAASC,wBAAT,QAAyC,2EAAzC;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,wBAAR,QAAuC,oEAAvC;AACA,SAAQC,qBAAR,QAAoC,iCAApC;AACA,OAAO,iBAAP;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,SAAT,GAAqB;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,UAAU,CAACG,iBAAD,CAAxC;AACA,QAAM,CAACU,eAAD,EAAkBC,iBAAlB,IAAuCd,UAAU,CAACK,gBAAD,CAAvD;AACA,QAAM,CAACU,iBAAD,EAAoBC,mBAApB,IAA2ChB,UAAU,CAACI,wBAAD,CAA3D;AACA,QAAM,CAACa,eAAD,EAAkBC,iBAAlB,IAAuCjB,QAAQ,CAACK,wBAAD,CAArD;;AAEA,QAAMa,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAhC,EAAkC;AAChCL,MAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACA,YAAME,GAAG,GAAGjB,qBAAqB,CAAC,sBAAD,EAAyB,iBAAeM,eAAxC,EAAyDO,KAAK,CAACC,MAAN,CAAaC,KAAtE,CAAjC;AACA,YAAMG,QAAQ,GAAG,MAAMvB,mBAAmB,CAACsB,GAAD,CAA1C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EAJgC,CAKhC;AACD,KAPqC,CAQpC;AACA;AAEA;AAEA;;AAEF,GAfF;;AAiBC,QAAMG,kBAAkB,GAAG,MAAOR,KAAP,IAAiB;AAC3C,QAAIA,KAAK,CAACS,GAAN,KAAc,OAAlB,EAA2B;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCd,eAAvC,GAAuD,GAAvD,GAA2DI,eAAvE;AACAL,MAAAA,UAAU,CAAC,iBAAD,CAAV,CAFoB,CAGpB;AACH;AAEJ,GAPD;;AASD,sBACE;AACA,IAAA,SAAS,EAAG,mBADZ;AAEA,IAAA,KAAK,EAAIK,eAFT;AAGA,IAAA,QAAQ,EAAIE,cAHZ;AAIA,IAAA,WAAW,EAAE,aAAaN,eAAb,GAA+B,cAJ5C;AAKA,IAAA,OAAO,EAAEe,kBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAEH,eAAelB,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { fetchSuggestionData } from '../../request/fetch_info/axios/axios_fetch_suggestion_data';\nimport {AppContentContext} from '../../context/app_content_context/AppContentContext';\nimport { AppMainSuggestionContext } from '../../context/app_main_search_suggestion_context/AppMainSuggestionContext';\nimport {AppSearchContext} from '../../context/app_search_context/AppSearchContext'\nimport {AppSearchAddendumContext} from '../../context/app_search_addendum_context/AppSearchAddendumContext'\nimport {build_api_request_url} from '../../request/build_request_url'\nimport './SearchBar.css';\n\nconst axios = require('axios');\n\nfunction SearchBar() {\n\n    const [content, setContent] = useContext(AppContentContext);\n    const [search_paradigm, setSearchParadigm] = useContext(AppSearchContext);\n    const [search_suggestion, setSearchSuggestion] = useContext(AppMainSuggestionContext);\n    const [search_addendum, setSearchAddendum] = useState(AppSearchAddendumContext);\n    \n    const updateContexts = async (event) => {\n      if (event.target.value.length > 3){\n        setSearchAddendum(event.target.value);\n        const url = build_api_request_url(\"neverlur_backend_api\", \"suggestions/\"+search_paradigm, event.target.value)\n        const response = await fetchSuggestionData(url);\n        console.log(\"GOT A \", response);   \n        //setContent(response);\n      }\n        // console.log(\"would search http://localhost:8000/api/suggestions\"+search_paradigm+\"/\"+search_addendum+\"/\")\n        // const resource = fetchSuggestionData(search_addendum, search_paradigm);\n        \n        //console.log(\"would ask continuation for\"+search_addendum+\" in \"+search_paradigm);\n        \n        //async get suggestion string\n\n     }\n \n     const handleEnterKeyDown = async (event) => {\n      if (event.key === 'Enter') {\n             console.log(\"enter for http://localhost:8000/api/\"+search_paradigm+\"/\"+search_addendum);\n             setContent(\"PRESSED WORKING\");\n             //async get queues\n         }\n\n     }\n\n    return (\n      <input\n      className = \"searchbar-element\"\n      input = {search_addendum}\n      onChange = {updateContexts}\n      placeholder={\"Procure \" + search_paradigm + \" in Neverlur\"}\n      onKeyUp={handleEnterKeyDown} />\n    );\n  }\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}